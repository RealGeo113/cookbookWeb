@page "{category?}/{p?}"
@model cookbookWeb.Pages.RecipesModel
@using Microsoft.AspNetCore.Identity
@using cookbookWeb.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Recipes";
}

@section Stylesheets{
    <link rel="stylesheet" href="~/css/recipes.css" />
}

<div class="container">
    <div class="row">
        <div class="category-container flex-row">
            @{
                var isActive = (Model.Category == "" || Model.Category == null) ? "category-active" : "";
            }
            <a class="category-link" asp-area="Recipes" asp-page="/Index" asp-route-category="" >
                <div class="category @isActive d-flex">
                    All Recipes
                </div>
            </a>
            
            @{ foreach (Category category in Model.Categories)
                {
                isActive = (Model.Category == category.Name.ToLower()) ? "category-active" : "";
                <a class="category-link" asp-area="Recipes" asp-page="/Index" asp-route-category="@category.Name">
                    <div class="category @isActive d-flex">
                        @category.Name
                    </div>    
                </a>
                }
             }

            @if (SignInManager.IsSignedIn(User))
            {
                isActive = (Model.Category == "favorites") ? "category-active" : "";
                <a class="category-link" asp-area="Recipes" asp-page="/Index" asp-route-category="Favorites">
                    <div class="category @isActive d-flex">
                        Favorites
                    </div>    
                </a>
            }
        </div>
    </div>

    @if (SignInManager.IsSignedIn(User))
    {
        if (User.IsInRole("Moderator"))
        {
        <div class="d-flex justify-content-between controls-container">
            <a asp-area="Recipe" asp-page="/Add" class="btn btn-success">Add recipe</a>
        </div>
        }
    }
    
    @if (Model.Recipes.Count == 0 || (Model.Recipes.Where(r => r.IsApproved == true).ToList().Count == 0 && !User.IsInRole("Admin")))
    {
        <p>
            No Recipes Found
        </p>
    }
    else
    {
    <div class="recipes-container">
    @foreach (var recipe in Model.Recipes)
    {
        if (recipe.IsApproved || (User.IsInRole("Admin")))
        {  
        <div class="row recipe">
            @**@
                <div class="col recipe-image-container">
                    <a asp-area="Recipe" asp-route-id="@recipe.Id">
                        <img class="recipe-image" src="@Html.DisplayFor(m => recipe.ImagePath)" alt="Recipe Image" />
                        <div class="recipe-overlay">
                            <h5>Click to open...</h5>
                        </div>
                    </a>
                </div>
            <div class="col-md-6 recipe-info">
                <div class="recipe-name">
                    @{if(!recipe.IsApproved){
                        <h2>@Html.DisplayFor(m => recipe.Name) <span class="text-danger">NOT APPROVED</span></h2>
                    }else{
                        <h2>@Html.DisplayFor(m => recipe.Name)</h2>
                    }}
                    
                </div>
                <div class="">
                    <div>
                        <div class="recipe-author">By: @Html.DisplayFor(m => recipe.Author.FullName)</div>
                        <div class="recipe-people">People: @Html.DisplayFor(m => recipe.People)</div>
                        <div class="recipe-time">Time: @Html.DisplayFor(m => recipe.Time)</div>
                        <div class="recipe-description">@Html.DisplayFor(m => recipe.Description)</div>
                    </div>
                    <div class="recipe-action d-flex flex-row-reverse align-bottom"><a asp-area="Recipe" asp-route-id="@recipe.Id">Show recipe</a></div>
                </div>
            </div>
        </div> 
           
        }
    }
    </div>
    }
</div>
<div class="container">
    @{
        var prevDisabled = !Model.Recipes.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Recipes.HasNextPage ? "disabled" : "";
    }

        <a asp-area="Administrator" asp-page="/Recipes/Index"
        asp-route-p="@(Model.Recipes.PageIndex - 1)"
        class="btn btn-primary @prevDisabled">
            Previous
        </a>
        <a asp-area="Administrator" asp-page="/Recipes/Index"
        asp-route-p="@(Model.Recipes.PageIndex + 1)"
        class="btn btn-primary @nextDisabled">
            Next
        </a>
</div>

@section Scripts {

}